CREATE DATABASE IF NOT EXISTS BAStorytelling;

USE BAStorytelling;

CREATE TABLE IF NOT EXISTS roles(
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    roleName VARCHAR(20) NOT NULL
);

CREATE TABLE users(
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    userName VARCHAR(20) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL, 
    userPassword VARCHAR(255) NOT NULL,
    passwordSalt VARCHAR(255) NOT NULL,
    roleID INT NOT NULL DEFAULT 1,
    FOREIGN KEY (roleID) REFERENCES roles(id)
);

CREATE TABLE profiles(
    profileID INT PRIMARY KEY NOT NULL,
    FOREIGN KEY (profileID) REFERENCES users(id) 
    ON DELETE CASCADE ON UPDATE CASCADE,
    firstName VARCHAR(20),
    lastName VARCHAR(20),
    avatar VARCHAR(255)
);

CREATE TABLE interests(
    interestID INT PRIMARY KEY NOT NULL,
    FOREIGN KEY (interestID) REFERENCES users(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    scifi TINYINT(1) NOT NULL DEFAULT 0,
    fantasy TINYINT(1) NOT NULL DEFAULT 0,
    mystery TINYINT(1) NOT NULL DEFAULT 0,
    dystopian TINYINT(1) NOT NULL DEFAULT 0,
    historical_fiction TINYINT(1) NOT NULL DEFAULT 0,
    satire TINYINT(1) NOT NULL DEFAULT 0,
    non_fiction TINYINT(1) NOT NULL DEFAULT 0
);

CREATE TABLE titles(
    titleID INT PRIMARY KEY NOT NULL,
    FOREIGN KEY (titleID) REFERENCES users(id)
    ON DELETE CASCADE ON UPDATE CASCADE,
    writer TINYINT(1) NOT NULL DEFAULT 0,
    artist TINYINT(1) NOT NULL DEFAULT 0,
    editor TINYINT(1) NOT NULL DEFAULT 0,
    publisher TINYINT(1) NOT NULL DEFAULT 0,
    agent TINYINT(1) NOT NULL DEFAULT 0,
    reader TINYINT(1) NOT NULL DEFAULT 1
);

CREATE TABLE prompts(
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    authorID INT NOT NULL,
    FOREIGN KEY (authorID)  REFERENCES users(id),
    createDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modifyDate DATETIME ON UPDATE CURRENT_TIMESTAMP,
    publishDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    content TEXT NOT NULL
);

CREATE TABLE stories(
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    title VARCHAR(255) NOT NULL,
    authorID INT NOT NULL,
    FOREIGN KEY (authorID) REFERENCES users(id),
    createDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modifyDate DATETIME ON UPDATE CURRENT_TIMESTAMP,
    content TEXT NOT NULL
);

CREATE TABLE news(
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    title VARCHAR(255) NOT NULL,
    authorID INT NOT NULL,
    FOREIGN KEY (authorID) REFERENCES users(id),
    createDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modifyDate DATETIME ON UPDATE CURRENT_TIMESTAMP,
    content TEXT NOT NULL
);

CREATE TABLE comments(
    id INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    authorID INT NOT NULL,
        FOREIGN KEY (authorID) REFERENCES users(id),
    content TEXT NOT NULL,
    promptID INT,
        FOREIGN KEY (promptID) REFERENCES prompts(id),
    storyID INT,
        FOREIGN KEY (storyID) REFERENCES stories(id),
    commentID INT,
        FOREIGN KEY (commentID) REFERENCES comments(id),
    newsID INT,
        FOREIGN KEY (newsID) REFERENCES news(id),
    createDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
    modifyDate DATETIME ON UPDATE CURRENT_TIMESTAMP  
);

CREATE TABLE purchaseStory(
    userID INT NOT NULL,
    FOREIGN KEY (userID) REFERENCES users(id),
    storyID INT NOT NULL,
    FOREIGN KEY (storyID) REFERENCES stories(id),
    PRIMARY KEY (userID, storyID)
);

DELIMITER ;;

CREATE TRIGGER userCreation
AFTER INSERT ON users FOR EACH ROW 
BEGIN 
    INSERT INTO profiles (profileID) VALUES (new.id);
    INSERT INTO titles (titleID) VALUES (new.id);
    INSERT INTO interests(interestID) VALUES (new.id);
END;;

DELIMITER ;